{"version":3,"sources":["Utils.js","actions/mainActions.js","reducers/mainReducers.js","store.js","hocs/withPokeList.js","services/httpService.js","components/PokeList.js","components/PokeDetail.js","App.js","serviceWorker.js","index.js"],"names":["localDB","addUpdateItem","name","data","localStorage","setItem","JSON","stringify","getItem","parse","removeItem","clear","mainActions","ADD_ITEM","REM_ITEM","UPDATE_ITEM","SET_NEED_LIST_FETCH","FETCH_LIST_PENDING","FETCH_LIST_SUCCESS","FETCH_LIST_ERROR","SET_NEED_DETAIL_FETCH","FETCH_DETAIL_PENDING","FETCH_DETAIL_SUCCESS","FETCH_DETAIL_ERROR","SET_ACTIVE_MAINTAB","addItem","type","remItem","uid","updateItem","doFetchListPending","doFetchListSuccess","offset","doFetchListError","error","doFetchDetailPending","doFetchDetailSuccess","doFetchDetailError","setActiveMainTab","myItemList","initialState","itemList","currentItem","itemCount","myItemCount","length","listOffset","listLimit","needListFetch","fetchListPending","fetchListError","needDetailFetch","fetchDetailPending","fetchDetailError","activeMainTab","mainReducers","state","action","console","log","concat","uuid","v4","filter","obj","map","nickname","count","results","newObj","Object","assign","id","parseInt","exec","url","owned","item","find","getItemList","getMyItemList","getItemCount","getMyItemCount","getCurrentItem","getListOffset","getListLimit","getNeedListFetch","getFetchListPending","getFetchListError","getNeedDetailFetch","getFetchDetailPending","getFetchDetailError","getActiveMainTab","middlewares","thunk","store","createStore","combineReducers","applyMiddleware","withPokeList","props","Comp","this","Component","doFetchList","limit","dispatch","fetch","then","res","json","catch","doFetchDetail","StyledTable","styled","Table","PokeList","confirmOpen","page","handlePageClick","e","history","push","pathname","isMyList","Math","max","handleRowClick","handleRemoveClick","stopPropagation","showConfirm","confirmData","setState","handleCancel","handleConfirm","bind","match","params","pagenum","nextProps","prevProps","prevState","snapshot","Fragment","unstackable","celled","selectable","color","Header","Row","HeaderCell","collapsing","textAlign","Body","idx","key","onClick","Cell","Responsive","as","onlyComputer","Image","size","centered","verticalAlign","src","sprites","front_default","Button","negative","icon","Footer","colSpan","Menu","floated","pagination","Item","disabled","Icon","Array","keys","x","minpg","maxpg","ceil","active","Confirm","open","header","content","cancelButton","confirmButton","onCancel","onConfirm","Dimmer","inverted","Loader","mapStateToProps","ownProps","MyPokeList","compose","withRouter","connect","StyledRail","Rail","HeaderSegment","Segment","StyledSegment","StyledList","List","StyledLabel","Label","RoutedBackButton","goBack","alt","PokeDetail","contextRef","createRef","inputNameRef","modalOpen","closeModal","showModal","modalData","handleCatchClick","status","floor","random","img","text","defaultName","back_default","handleChangeClick","handleOKClick","handleNameChange","value","errorNameInput","currentTarget","Ref","innerRef","vertical","attached","Card","Content","fluid","Meta","Description","Group","horizontal","ribbon","bulleted","abilities","ability","types","moves","move","extra","basic","positive","position","Sticky","context","block","Modal","closeOnEscape","closeOnDimmerClick","onClose","Grid","columns","Column","Input","ref","placeholder","defaultValue","onChange","Actions","primary","bindActionCreators","GlobalStyle","createGlobalStyle","MainContainer","Container","StyledMenu","App","handleTabClick","className","exact","path","component","tabular","compact","Link","to","link","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b6e08d7.chunk.js","sourcesContent":["const localDB = {\r\n\t\r\n\taddUpdateItem(name, data){\r\n\t\tlocalStorage.setItem(name,JSON.stringify(data));\r\n\t},\r\n\t\r\n\tgetItem(name){\r\n\t\tvar data = localStorage.getItem(name);\r\n\t\treturn (data && JSON.parse(data)) || [];\r\n\t},\r\n\t\r\n\tremoveItem(name){\r\n\t\tlocalStorage.removeItem(name);\r\n\t},\r\n\t\r\n\tclear(){\r\n\t\tlocalStorage.clear();\r\n\t}\r\n}\r\n\r\nexport default localDB;\r\n\r\n","const mainActions = {\r\n\tADD_ITEM: 'ADD_ITEM',\r\n  REM_ITEM: 'REM_ITEM',\r\n  UPDATE_ITEM: 'UPDATE_ITEM',\r\n  \r\n  SET_NEED_LIST_FETCH: 'SET_NEED_LIST_FETCH',\r\n  FETCH_LIST_PENDING: 'FETCH_LIST_PENDING',\r\n  FETCH_LIST_SUCCESS: 'FETCH_LIST_SUCCESS',\r\n  FETCH_LIST_ERROR: 'FETCH_LIST_ERROR',\r\n\r\n  SET_NEED_DETAIL_FETCH: 'SET_NEED_DETAIL_FETCH',\r\n  FETCH_DETAIL_PENDING: 'FETCH_DETAIL_PENDING',\r\n  FETCH_DETAIL_SUCCESS: 'FETCH_DETAIL_SUCCESS',\r\n  FETCH_DETAIL_ERROR: 'FETCH_DETAIL_ERROR',\r\n\r\n  SET_ACTIVE_MAINTAB: 'SET_ACTIVE_MAINTAB',\r\n}\r\n\r\nexport const addItem = (data) => ({ type: mainActions.ADD_ITEM, data });\r\nexport const remItem = (uid) => ({ type: mainActions.REM_ITEM, uid });\r\nexport const updateItem = (data) => ({ type: mainActions.UPDATE_ITEM, data });\r\n\r\nexport const setNeedListFetch = (needListFetch) => ({ type: mainActions.SET_NEED_LIST_FETCH, needListFetch });\r\nexport const doFetchListPending = () => ({ type: mainActions.FETCH_LIST_PENDING });\r\nexport const doFetchListSuccess = (data, offset) => ({ type: mainActions.FETCH_LIST_SUCCESS, data, offset });\r\nexport const doFetchListError = (error) => ({ type: mainActions.FETCH_LIST_ERROR, error });\r\n\r\nexport const setNeedDetailFetch = (needDetailFetch) => ({ type: mainActions.SET_NEED_DETAIL_FETCH, needDetailFetch });\r\nexport const doFetchDetailPending = () => ({ type: mainActions.FETCH_DETAIL_PENDING });\r\nexport const doFetchDetailSuccess = (data, uid) => ({ type: mainActions.FETCH_DETAIL_SUCCESS, data, uid });\r\nexport const doFetchDetailError = (error) => ({ type: mainActions.FETCH_DETAIL_ERROR, error });\r\n\r\nexport const setActiveMainTab = (data) => ({ type: mainActions.SET_ACTIVE_MAINTAB, data });\r\n\r\nexport default mainActions;\r\n","import uuid from 'uuid';\r\nimport localDB from './../Utils';\r\nimport mainActions from './../actions/mainActions';\r\n\r\nlet myItemList = localDB.getItem('pokeminMyList') || [];\r\n\r\nconst initialState = {\r\n\titemList: [],\r\n\tmyItemList: myItemList,\r\n\tcurrentItem: {},\r\n\r\n\titemCount: 0,\r\n\tmyItemCount: myItemList.length,\r\n\tlistOffset: 0,\r\n\tlistLimit: 20,\r\n\r\n\tneedListFetch: false,\r\n\tfetchListPending: false,\r\n\tfetchListError: '',\r\n\r\n\tneedDetailFetch: false,\r\n\tfetchDetailPending: false,\r\n\tfetchDetailError: '',\r\n\r\n\tactiveMainTab:'',\r\n}\r\n\r\nconst mainReducers = (state = initialState, action) => {\r\n\tconsole.log(\"Action: \",action);\r\n\tswitch (action.type) { \r\n\t\tcase mainActions.ADD_ITEM: {\r\n\t\t\tlet myItemList = state.myItemList.concat({ ...action.data, uid:uuid.v4() });\r\n\t\t\tlocalDB.addUpdateItem('pokeminMyList', myItemList);\r\n\t\t\treturn {...state, myItemList, myItemCount: state.myItemCount+1 };\r\n\t\t}\r\n\t\tcase mainActions.REM_ITEM: {\r\n\t\t\tlet myItemList = state.myItemList.filter(obj => obj.uid !== action.uid);\r\n\t\t\tlocalDB.addUpdateItem('pokeminMyList', myItemList);\r\n\t\t\treturn {...state, myItemList };\r\n\t\t}\r\n\t\tcase mainActions.UPDATE_ITEM: {\r\n\t\t\tlet myItemList = state.myItemList.map((obj) => {\r\n\t\t\t\tif (obj.uid === action.data.uid) {\r\n\t\t\t\t\treturn { ...obj, nickname: action.data.nickname }\r\n\t\t\t\t}\r\n\t\t\t\treturn obj;\r\n\t\t\t});\r\n\t\t\tlocalDB.addUpdateItem('pokeminMyList', myItemList);\r\n\t\t\treturn {...state, myItemList };\r\n\t\t}\r\n\r\n\t\tcase mainActions.SET_NEED_LIST_FETCH:\r\n\t\t\treturn {...state, needListFetch:action.needListFetch};\r\n\t\tcase mainActions.FETCH_LIST_PENDING:\r\n\t\t\treturn {...state, fetchListPending:true, needListFetch:false};\r\n\t\tcase mainActions.FETCH_LIST_SUCCESS:\r\n\t\t\treturn {...state, fetchListPending:false, needListFetch:false, itemCount:action.data.count, listOffset: action.offset,\r\n\t\t\t\titemList: action.data.results.map((obj)=>{\r\n\t\t\t\t\tlet newObj = Object.assign({}, obj);\r\n\t\t\t\t\tnewObj.id = parseInt(/\\/pokemon.*\\/([^/?]+)[/?].*$/gim.exec(newObj.url)[1]);\r\n\t\t\t\t\tnewObj.owned = state.myItemList.filter(item => item.id === newObj.id).length;\r\n\t\t\t\t\treturn newObj;\r\n\t\t\t\t})};\r\n\t\tcase mainActions.FETCH_LIST_ERROR:\r\n\t\t\treturn {...state, fetchListPending:false, needListFetch:false, fetchListError:action.error};\r\n\r\n\t\tcase mainActions.SET_NEED_DETAIL_FETCH:\r\n\t\t\treturn {...state, needDetailFetch:action.needDetailFetch};\r\n\t\tcase mainActions.FETCH_DETAIL_PENDING:\r\n\t\t\treturn {...state, fetchDetailPending:true, needDetailFetch:false};\r\n\t\tcase mainActions.FETCH_DETAIL_SUCCESS: {\r\n\t\t\tlet newObj = Object.assign({}, action.data);\r\n\t\t\tif (action.uid) {\r\n\t\t\t\tlet obj = state.myItemList.find(item => item.uid === action.uid);\r\n\t\t\t\tnewObj = {...newObj, ...obj};\r\n\t\t\t}\r\n\t\t\tnewObj.owned = state.myItemList.filter(item => item.id === newObj.id).length;\r\n\t\t\treturn {...state, fetchDetailPending:false, needDetailFetch:false, currentItem: newObj};\r\n\t\t}\r\n\t\tcase mainActions.FETCH_DETAIL_ERROR:\r\n\t\t\treturn {...state, fetchDetailPending:false, needDetailFetch:false, fetchDetailError:action.error};\r\n\r\n\t\tcase mainActions.SET_ACTIVE_MAINTAB:\r\n\t\t\t\treturn {...state, activeMainTab: action.data};\r\n\r\n\t\tdefault:      \r\n\t\t\treturn state;  \r\n\t}\r\n}\r\n\r\nexport default mainReducers;\r\n\r\nexport const getItemList = state => state.mainReducers.itemList;\r\nexport const getMyItemList = state => state.mainReducers.myItemList;\r\nexport const getItemCount = state => state.mainReducers.itemCount;\r\nexport const getMyItemCount = state => state.mainReducers.myItemCount;\r\nexport const getCurrentItem = state => state.mainReducers.currentItem;\r\n\r\nexport const getListOffset = state => state.mainReducers.listOffset;\r\nexport const getListLimit = state => state.mainReducers.listLimit;\r\n\r\nexport const getNeedListFetch = state => state.mainReducers.needListFetch;\r\nexport const getFetchListPending = state => state.mainReducers.fetchListPending;\r\nexport const getFetchListError = state => state.mainReducers.fetchListError;\r\n\r\nexport const getNeedDetailFetch = state => state.mainReducers.needDetailFetch;\r\nexport const getFetchDetailPending = state => state.mainReducers.fetchDetailPending;\r\nexport const getFetchDetailError = state => state.mainReducers.fetchDetailError;\r\n\r\nexport const getActiveMainTab = state => state.mainReducers.activeMainTab;\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport mainReducers from './reducers/mainReducers';\r\n\r\nconst middlewares = [thunk];\r\nconst store = createStore(combineReducers({mainReducers}), applyMiddleware(...middlewares));\r\n\r\nexport default store;","import React, { Component } from 'react';\r\n\r\nconst withPokeList = props => Comp => {\r\n    class withPokeList extends Component {\r\n\r\n        render() {\r\n            return (<Comp {...this.props} {...props} />);\r\n        }\r\n    }\r\n    return withPokeList;\r\n};\r\n\r\nexport default withPokeList;","import { doFetchListPending, doFetchListSuccess, doFetchListError, setNeedListFetch,\r\n\t\tdoFetchDetailPending, doFetchDetailSuccess, doFetchDetailError, setNeedDetailFetch } from './../actions/mainActions';\r\n\r\nexport default function doFetchList(offset, limit){\r\n\t\treturn dispatch => {\r\n\t\t\tconsole.log('Fetching!!');\r\n\t\t\tdispatch(doFetchListPending());\r\n\t\t\tfetch(`https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=${limit}`)\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(res => {\r\n\t\t\t\tdispatch(doFetchListSuccess(res, offset));\r\n\t\t\t\treturn res;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tdispatch(doFetchListError(error));\r\n\t\t\t})\r\n\t\t}\r\n}\r\n\r\nexport function doFetchDetail(id, uid){\r\n\treturn dispatch => {\r\n\t\tconsole.log('Fetching!!');\r\n\t\tdispatch(doFetchDetailPending());\r\n\t\tfetch(`https://pokeapi.co/api/v2/pokemon/${id}/`)\r\n\t\t.then(res => res.json())\r\n\t\t.then(res => {\r\n\t\t\tdispatch(doFetchDetailSuccess(res, uid));\r\n\t\t\treturn res;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tdispatch(doFetchDetailError(error));\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport function triggerListFetch(needListFetch) { return dispatch => { console.log('triggerListFetch!!'); dispatch(setNeedListFetch(needListFetch)) } };\r\nexport function triggerDetailFetch(needDetailFetch) { return dispatch => { console.log('triggerDetailFetch!!'); dispatch(setNeedDetailFetch(needDetailFetch)) } };\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Table, Menu, Icon, Button, Confirm, Dimmer, Loader, Responsive, Image } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport withPokeList from '../hocs/withPokeList';\r\nimport  doFetchList from './../services/httpService';\r\nimport { remItem, setActiveMainTab } from './../actions/mainActions';\r\nimport { getNeedListFetch, getFetchListPending, getFetchListError, \r\n      getItemList, getMyItemList, getListOffset, getListLimit, getItemCount, getMyItemCount } from './../reducers/mainReducers';\r\n\r\nconst StyledTable = styled(Table)`\r\n&&&& tr:hover{\r\n  cursor: pointer; \r\n}\r\n`;\r\n\r\n\r\nclass PokeList extends Component {\r\n\r\n  state = { confirmOpen: false, page: 1 }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRowClick = this.handleRowClick.bind(this);\r\n    this.handleRemoveClick = this.handleRemoveClick.bind(this);\r\n    this.handlePageClick = this.handlePageClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n\t\tconsole.log('ListThisPropsDidMount: ',this.props);\r\n    const { listOffset, listLimit, isMyList } = this.props;\r\n    const { page } = this.props.match.params;\r\n    let pagenum = Math.max(parseInt(page? page: '1'), 1);\r\n    this.setState({ page: pagenum });\r\n    // Initial fetching\r\n    if (!isMyList) {\r\n\t\t  this.props.dispatch(doFetchList((pagenum>0)? (pagenum-1)*listLimit: listOffset, listLimit));\r\n      this.props.dispatch(setActiveMainTab('list'));\r\n    } else {\r\n      this.props.dispatch(setActiveMainTab('mylist'));\r\n    }\r\n  }\r\n  \r\n  componentWillReceiveProps(nextProps) {\r\n    console.log('ListThisWillReceiveProps: ',this.props, '\\nParams:', this.props.match.params);\r\n    const { listOffset, listLimit, isMyList } = this.props;\r\n    const { page } = nextProps.match.params;\r\n    let pagenum = Math.max(parseInt(page? page: '1'), 1);\r\n    this.setState({ page: pagenum });\r\n    if (page !== this.props.match.params.page) {\r\n      if (!isMyList)\r\n        this.props.dispatch(doFetchList((pagenum>0)? (pagenum-1)*listLimit: listOffset, listLimit));\r\n    }\r\n  }\r\n\t\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tconsole.log('ListThisPropsDidUpdate: ',this.props, ' PrevProps: ',prevProps);\r\n    const { needListFetch, listOffset, listLimit, isMyList } = this.props;\r\n    const { page } = this.props.match.params;\r\n    let pagenum = Math.max(parseInt(page? page: '1'), 1);\r\n\t\tif (needListFetch === true && prevProps.needListFetch === false) {\r\n      if (!isMyList)\r\n\t\t\t  this.props.dispatch(doFetchList((pagenum>0)? (pagenum-1)*listLimit: listOffset, listLimit));\r\n\t\t}\r\n  }\r\n  \r\n  handlePageClick = (page) => (e) => {\r\n    console.log('Page: ',page);\r\n    this.props.history.push({\r\n      pathname: (this.props.isMyList? '/mylist/':'/list/')+Math.max(page,1),\r\n    });\r\n  }\r\n\r\n  handleRowClick = (item) => (e) => {\r\n    console.log('Item: ',item);\r\n    this.props.history.push({\r\n      pathname: `/detail/${item.id}`+ (item.uid? `/${item.uid}`:''),\r\n    });\r\n  }\r\n\r\n  handleRemoveClick = (item) => (e) => {\r\n    e.stopPropagation();\r\n    this.showConfirm(item);\r\n    console.log(\"Release!\", item);\r\n  }\r\n\r\n  showConfirm = (confirmData) => {\r\n    this.setState({ confirmData, confirmOpen: true });\r\n  }\r\n  handleCancel = () => this.setState({ confirmOpen: false });\r\n  handleConfirm = () => {\r\n    const { confirmData } = this.state;\r\n    this.props.dispatch(remItem(confirmData.uid));\r\n    this.setState({ confirmOpen: false });\r\n  }\r\n\r\n  render () {\r\n    const { isMyList, itemList, listLimit, itemCount, fetchListPending } = this.props;\r\n    const { confirmData, confirmOpen, page } = this.state;\r\n    console.log('props:', this.props, '\\nstate:', this.state);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <StyledTable unstackable celled selectable color='red'>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell collapsing>No</Table.HeaderCell>\r\n              <Table.HeaderCell>Name</Table.HeaderCell>\r\n              { isMyList && <Table.HeaderCell >Nickname</Table.HeaderCell> }\r\n              { !isMyList && <Table.HeaderCell collapsing textAlign='right'>Owned</Table.HeaderCell> }\r\n              { isMyList && <Table.HeaderCell collapsing>Release</Table.HeaderCell> }\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {itemList.filter((item, idx) => (isMyList? idx: item.id-1) >= Math.max(parseInt(page? page: 1)-1,0)*listLimit && (isMyList? idx: item.id-1) < Math.max(parseInt(page? page: 1),0)*listLimit)\r\n            .map((item, idx) => \r\n              <Table.Row key={isMyList? item.uid: item.id} onClick={this.handleRowClick(item)} >\r\n                <Table.Cell>{Math.max(parseInt(page? page: 1)-1,0)*listLimit+idx+1}</Table.Cell>\r\n                <Table.Cell>\r\n                  {isMyList && <Responsive as='span' {...Responsive.onlyComputer}>\r\n                    <Image size='mini' centered verticalAlign='middle' src={item.sprites.front_default} />\r\n                  </Responsive>}\r\n                  {item.name}\r\n                </Table.Cell>\r\n                { isMyList && <Table.Cell >{item.nickname}</Table.Cell> }\r\n                { !isMyList && <Table.Cell textAlign='right'>{item.owned}</Table.Cell> }\r\n                { isMyList && <Table.Cell textAlign='center'><Button negative icon='remove' size='mini' onClick={this.handleRemoveClick(item)} /></Table.Cell> }\r\n              </Table.Row>\r\n            )}\r\n          </Table.Body>\r\n\r\n          <Table.Footer>\r\n            <Table.Row>\r\n              <Table.HeaderCell colSpan={isMyList? 4: 3}>\r\n                <Menu floated='right' pagination>\r\n                  <Menu.Item as='a' icon disabled={page <= 1} onClick={this.handlePageClick(page-1)}>\r\n                    <Icon name='chevron left' />\r\n                  </Menu.Item>\r\n                  {\r\n                    [...Array(5).keys()].map(x => {\r\n                    let minpg = Math.max(page-2,1);\r\n                    let maxpg = Math.ceil(itemCount/listLimit);\r\n                    x += minpg; \r\n                    return <Menu.Item as='a' key={x} active={x === page} disabled={x > maxpg} onClick={this.handlePageClick(x)}>{x}</Menu.Item>\r\n                    })\r\n                  }\r\n                  <Menu.Item as='a' icon disabled={page >= Math.ceil(itemCount/listLimit)} onClick={this.handlePageClick(page+1)}>\r\n                    <Icon name='chevron right' />\r\n                  </Menu.Item>\r\n                </Menu>\r\n              </Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Footer>\r\n        </StyledTable>\r\n\r\n        <Confirm\r\n          open={confirmOpen}\r\n          header='Release'\r\n          content={`Are you sure you wanted to release ${confirmData && confirmData.nickname} ?`}\r\n          cancelButton=\"No\"\r\n          confirmButton=\"Yes\"\r\n          onCancel={this.handleCancel}\r\n          onConfirm={this.handleConfirm}\r\n          size='tiny'\r\n        />\r\n\r\n        <Dimmer active={fetchListPending} inverted>\r\n          <Loader>Loading</Loader>\r\n        </Dimmer>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    itemList: ownProps.isMyList? getMyItemList(state): getItemList(state),\r\n    itemCount: ownProps.isMyList? getMyItemCount(state): getItemCount(state),\r\n    listOffset: getListOffset(state),\r\n    listLimit: getListLimit(state),\r\n    fetchListError: getFetchListError(state),\r\n    fetchListPending: getFetchListPending(state),\r\n    needListFetch: getNeedListFetch(state),\r\n  }\r\n}\r\n\r\nexport const MyPokeList = compose(\r\n  withRouter,\r\n  withPokeList({ isMyList:true }),\r\n  connect(mapStateToProps),\r\n)(PokeList);\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps),\r\n)(PokeList);","import React, { Component, createRef } from 'react';\r\nimport { compose, bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Header, Rail, Sticky, Grid, Ref, Segment, Button, Image, Label, List, Card, Modal, Input, Dimmer, Loader } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport { doFetchDetail } from './../services/httpService';\r\nimport { addItem, updateItem } from './../actions/mainActions';\r\nimport { getNeedDetailFetch, getFetchDetailPending, getFetchDetailError, getCurrentItem } from './../reducers/mainReducers';\r\n\r\nconst StyledRail = styled(Rail)`\r\n&&& {\r\n  left: 0;\r\n  right: auto;\r\n  padding: 0 0 0 0;\r\n  margin: auto; \r\n  width: 100%;\r\n}\r\n`;\r\n\r\nconst HeaderSegment = styled(Segment)`\r\n&&& {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 50%;\r\n  width: 100%;\r\n  margin:auto auto 0 -50%;\r\n}\r\n`;\r\n\r\nconst StyledSegment = styled(Segment)`\r\n&&& {\r\n  padding-top:3em;\r\n  text-transform: capitalize;\r\n}\r\n`;\r\n\r\nconst StyledList = styled(List)`\r\n&&& {\r\n  overflow-x: visible;\r\n  overflow-y: auto;\r\n  max-height: 15em;\r\n  >.item {\r\n    margin-left: 1.5em;\r\n  }\r\n}\r\n`;\r\n\r\nconst StyledLabel = styled(Label)`\r\n&&& {\r\n  background-color: transparent;\r\n  :first-letter {\r\n    text-transform: capitalize;\r\n  }\r\n}\r\n`;\r\n\r\nconst BackButton = ({ history }) => <Button inverted floated='left' icon='left chevron' onClick={() => history.goBack()} alt=\"Go back\" />;\r\nconst RoutedBackButton = withRouter(BackButton);\r\n\r\nclass PokeDetail extends Component {\r\n  contextRef = createRef();\r\n  inputNameRef = createRef();\r\n\r\n  state = { modalOpen: false }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.closeModal = this.closeModal.bind(this);\r\n    this.showModal = this.showModal.bind(this);\r\n    this.handleCatchClick = this.handleCatchClick.bind(this);\r\n    this.handleChangeClick = this.handleChangeClick.bind(this);\r\n    this.handleOKClick = this.handleOKClick.bind(this);\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('DetailThisPropsDidMount: ',this.props, '\\nParams:', this.props.match.params);\r\n    const { doFetchDetail } = this.props;\r\n\t\tconst { id, uid } = this.props.match.params;\r\n\t\t// Initial fetching\r\n\t\tdoFetchDetail(id, uid);\r\n  }\r\n  \r\n  componentWillReceiveProps(nextProps) {\r\n    console.log('DetailThisWillReceiveProps: ',this.props, '\\nParams:', this.props.match.params);\r\n    const { id, uid } = nextProps.match.params;\r\n    if (id !== this.props.match.params.id || uid !== this.props.match.params.uid) {\r\n        doFetchDetail(id, uid);\r\n    }\r\n  }\r\n\t\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n    console.log('DetailThisPropsDidUpdate: ',this.props, ' PrevProps: ',prevProps, '\\nParams:', this.props.match.params);\r\n    const { doFetchDetail } = this.props;\r\n    const { id, uid } = this.props.match.params;\r\n\t\tif (this.props.needListFetch === true && prevProps.needListFetch === false) {\r\n\t\t\tdoFetchDetail(id, uid);\r\n\t\t}\r\n\t}\r\n\r\n  closeModal = () => this.setState({ modalOpen: false });\r\n\r\n  showModal = (modalData) => {\r\n    this.setState({ modalData, modalOpen: true });\r\n  }\r\n\r\n  handleCatchClick = (e) => {\r\n    const { currentItem } = this.props;\r\n    const status = Math.floor(Math.random() * 2); //0..1\r\n\r\n    this.setState({ nickname: currentItem.name });\r\n    if (status > 0) {\r\n      this.showModal({\r\n        status,\r\n        color: 'green',\r\n        header: 'Success', \r\n        img: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/poke-ball.png', \r\n        text: `Please give a nickname for ${currentItem.name}`,\r\n        defaultName: currentItem.name,\r\n      });\r\n    } else {\r\n      this.showModal({\r\n        status,\r\n        color: 'red',\r\n        header: 'Failed', \r\n        img: currentItem.sprites.back_default, \r\n        text: `${currentItem.name} has fled`,\r\n        defaultName: currentItem.name,\r\n      });\r\n    }\r\n    console.log(\"Catch!\");\r\n  }\r\n\r\n  handleChangeClick = (e) => {\r\n    const { currentItem } = this.props;\r\n    this.setState({ nickname: currentItem.nickname });\r\n    this.showModal({\r\n      status: 2,\r\n      header: 'Update', \r\n      img: currentItem.sprites.front_default, \r\n      text: `Change ${currentItem.name} nickname to`,\r\n      defaultName: currentItem.nickname,\r\n    });\r\n    console.log(\"Change!\");\r\n  }\r\n\r\n  handleOKClick = (e) => {\r\n    const { modalData } = this.state;\r\n    const { addItem, updateItem } = this.props;\r\n    switch (modalData.status) {\r\n      case 1: {\r\n        addItem({...this.props.currentItem, nickname: this.state.nickname});\r\n        this.props.history.push({\r\n          pathname: `/mylist`,\r\n        });\r\n        break;\r\n      }\r\n      case 2: {\r\n        updateItem({...this.props.currentItem, nickname: this.state.nickname});\r\n        this.props.history.push({\r\n          pathname: `/mylist`,\r\n        });\r\n        break;\r\n      }\r\n      default: {\r\n        this.props.history.goBack();\r\n      }\r\n    }\r\n    this.closeModal();\r\n    console.log(\"OK! \",this.inputNameRef, '\\nState: ', this.state);\r\n  }\r\n\r\n  handleNameChange = (e, { name, value }) => {\r\n    let errorNameInput = false;\r\n    if (e.currentTarget.value === '') { \r\n        errorNameInput = true;\r\n    }\r\n    this.setState({ [name]: value, errorNameInput });\r\n  }\r\n\r\n\r\n  render () {\r\n    const { currentItem, fetchDetailPending } = this.props;\r\n    const { uid } = this.props.match.params;\r\n    const { modalOpen, modalData } = this.state;\r\n    console.log('props:', this.props, '\\nstate:', this.state);\r\n\r\n    return (\r\n        <Ref innerRef={this.contextRef}>\r\n          <React.Fragment>\r\n            <StyledSegment vertical attached>\r\n              <Card centered color='red'>\r\n                <Card.Content>\r\n                  <Image fluid centered verticalAlign='middle' src={currentItem.sprites && currentItem.sprites.front_default} />\r\n                  <Card.Header>{currentItem.name}</Card.Header>\r\n                  <Card.Meta>{(uid && currentItem.nickname)? currentItem.nickname: '\\u00A0'}</Card.Meta>\r\n                  <Card.Description>\r\n                    <Segment.Group>\r\n                      <Segment.Group horizontal>\r\n                        <Segment textAlign='left' >\r\n                          <Label color='red' ribbon>\r\n                            Abilities\r\n                          </Label>\r\n                          <List bulleted verticalAlign='middle'>\r\n                            {currentItem.abilities && currentItem.abilities.map(obj => <List.Item key={obj.ability.name}><List.Content>{obj.ability.name}</List.Content></List.Item>)}\r\n                          </List>\r\n                        </Segment>\r\n                        <Segment textAlign='left' >\r\n                          <Label color='red' ribbon='right'>\r\n                            Types\r\n                          </Label>\r\n                          <List bulleted verticalAlign='middle'>\r\n                            {currentItem.types && currentItem.types.map(obj => <List.Item key={obj.type.name}><List.Content>{obj.type.name}</List.Content></List.Item>)}\r\n                          </List>\r\n                        </Segment>\r\n                      </Segment.Group>\r\n                      <Segment textAlign='left' >\r\n                        <Label color='orange' ribbon>\r\n                          Moves\r\n                        </Label>\r\n                        <StyledList bulleted verticalAlign='middle'>\r\n                          {currentItem.moves && currentItem.moves.map(obj => <List.Item key={obj.move.name}><List.Content>{obj.move.name}</List.Content></List.Item>)}\r\n                        </StyledList>\r\n                      </Segment>\r\n                    </Segment.Group>\r\n                  </Card.Description>\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                { uid && currentItem.owned? \r\n                  <Button basic icon positive onClick={this.handleChangeClick}>\r\n                    Change Nickname\r\n                  </Button>\r\n                  :<Button basic icon positive onClick={this.handleCatchClick}>\r\n                    <Image centered verticalAlign='middle' src='https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/poke-ball.png' />\r\n                    Catch\r\n                  </Button>\r\n                }\r\n                </Card.Content>\r\n              </Card>\r\n            </StyledSegment>\r\n            <HeaderSegment vertical inverted>\r\n              <StyledRail position='left' attached>\r\n                <Sticky context={this.contextRef}>\r\n                  <Header as=\"h2\" textAlign='center' inverted block>\r\n                    <RoutedBackButton />Pokemon Detail\r\n                  </Header>           \r\n                </Sticky>\r\n              </StyledRail>\r\n            </HeaderSegment>\r\n\r\n            <Modal\r\n              open={modalOpen}\r\n              closeOnEscape={false}\r\n              closeOnDimmerClick={false}\r\n              onClose={this.closeModal}\r\n              size='tiny'\r\n            >\r\n              <Modal.Header><Header color={modalData && modalData.color}>{modalData && modalData.header}</Header></Modal.Header>\r\n              <Modal.Content>\r\n                <Grid centered columns={4}>\r\n                  <Grid.Column>\r\n                  <Image fluid centered verticalAlign='middle' src={modalData && modalData.img} />\r\n                  </Grid.Column>\r\n                </Grid>\r\n                \r\n                <Label.Group size='large'>\r\n                  <StyledLabel>{modalData && modalData.text}</StyledLabel>\r\n                  { modalData && modalData.status>0 && \r\n                    <StyledLabel><Input name='nickname' ref={this.inputNameRef} placeholder='Nickname...' defaultValue={modalData && modalData.defaultName} onChange={this.handleNameChange} error={this.state.errorNameInput} /></StyledLabel> \r\n                  }\r\n                </Label.Group>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                <Button onClick={this.handleOKClick} primary inverted>\r\n                  OK\r\n                </Button>\r\n              </Modal.Actions>\r\n            </Modal>\r\n\r\n            <Dimmer active={fetchDetailPending} inverted>\r\n              <Loader>Loading</Loader>\r\n            </Dimmer>\r\n          </React.Fragment>\r\n        </Ref>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentItem: getCurrentItem(state),\r\n    fetchDetailError: getFetchDetailError(state),\r\n    fetchDetailPending: getFetchDetailPending(state),\r\n    needDetailFetch: getNeedDetailFetch(state),\r\n  }\r\n}\r\n\r\n// Custom dispatch\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  doFetchDetail,\r\n  addItem,\r\n  updateItem,\r\n}, dispatch);\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n)(PokeDetail);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Container, Segment, Grid, Image, Menu } from 'semantic-ui-react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport styled, { createGlobalStyle } from 'styled-components';\nimport PokeList, { MyPokeList } from './components/PokeList';\nimport PokeDetail from './components/PokeDetail';\nimport { setActiveMainTab } from './actions/mainActions';\nimport { getActiveMainTab } from './reducers/mainReducers';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background-color: #ffffff;\n    color: #212121;\n    transition: all 0.5s ease;\n    transition-property: color,background-color,border,font-size;\n  }\n`;\n\nconst MainContainer = styled(Container)`\n&&& {\n  padding-top: 1em;\n  width: 100%;\n  max-width: 600px !important;\n  text-align:center;\n  margin:auto;\n}\n`;\n\nconst StyledMenu = styled(Menu)`\n&&&& {\n  width:auto;\n  margin-left:auto;\n  margin-right:auto;\n}\n&&&& .item:not(.active):hover{\n  background: rgba(0,0,0,.03);\n}\n`;\n\nconst FooterSegment = styled(Segment)`\n&&& {\n  bottom: 0;\n  left: 50%;\n  width: 100%;\n  margin:auto auto 0 -50%;\n\n  @media (max-width: 600px) {\n    position: absolute;\n  }\n}\n`;\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleTabClick = this.handleTabClick.bind(this);\n  }\n\n  handleTabClick = (e, { name }) => {\n    this.props.dispatch(setActiveMainTab(name));\n    console.log('ActiveMainTab: ',name);\n  }\n\n  render () {\n    const { activeMainTab } = this.props;\n\n    return (\n      <Router>\n        <React.Fragment>\n          <GlobalStyle />\n          <MainContainer className='App'>\n            <Segment attached vertical>\n              <Switch>\n                <Route exact path='/'>\n                  <Grid centered columns={2}>\n                    <Grid.Column>\n                      <Image fluid centered verticalAlign='middle' src='https://raw.githubusercontent.com/PokeAPI/media/master/logo/pokeapi_256.png' />\n                    </Grid.Column>\n                  </Grid>\n                </Route>\n                <Route path='/list/:page?' component={PokeList} />\n                <Route path='/mylist/:page?' component={MyPokeList} />\n                <Route path='/detail/:id/:uid?' component={PokeDetail} />\n              </Switch>\n            </Segment>\n              <StyledMenu tabular compact attached=\"bottom\">\n                <Menu.Item \n                  as={ Link }\n                  to='/list'\n                  name='list'\n                  active={activeMainTab === 'list'}\n                  onClick={this.handleTabClick}\n                  link\n                >\n                  Pokemon List\n                </Menu.Item>\n\n                <Menu.Item \n                  as={ Link }\n                  to='/mylist'\n                  name='mylist'\n                  active={activeMainTab === 'mylist'}\n                  onClick={this.handleTabClick}\n                  link\n                >\n                  My Pokemon List\n                </Menu.Item>\n              </StyledMenu>\n          </MainContainer>\n        </React.Fragment>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    activeMainTab: getActiveMainTab(state),\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}